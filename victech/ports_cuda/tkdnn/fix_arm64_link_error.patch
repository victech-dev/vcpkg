diff --git a/CMakeLists.txt b/CMakeLists.txt
index 37dc0da..e36f898 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -48,6 +48,10 @@ set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DOPENCV")
 find_package(yaml-cpp REQUIRED)
 
 find_package(tensorrt REQUIRED)
+if (VCPKG_TARGET_ARCHITECTURE STREQUAL "arm64")
+    # custom for jetson board
+    LINK_DIRECTORIES("/usr/lib/aarch64-linux-gnu/tegra/")
+endif()
 
 #-------------------------------------------------------------------------------
 # Build Libraries
@@ -65,61 +69,89 @@ else()
 endif()
 target_link_libraries(tkDNN ${tkdnn_LIBS})
 
-# SMALL NETS
-add_executable(test_simple tests/simple/test_simple.cpp)
-target_link_libraries(test_simple tkDNN)
-
-add_executable(test_mnist tests/mnist/test_mnist.cpp)
-target_link_libraries(test_mnist tkDNN)
-
-add_executable(test_mnistRT tests/mnist/test_mnistRT.cpp)
-target_link_libraries(test_mnistRT tkDNN)
-
-add_executable(test_imuodom tests/imuodom/imuodom.cpp)
-target_link_libraries(test_imuodom tkDNN)
-
-# DARKNET
-file(GLOB darknet_SRC "tests/darknet/*.cpp")
-foreach(test_SRC ${darknet_SRC})
-    get_filename_component(test_NAME "${test_SRC}" NAME_WE)
-    set(test_NAME test_${test_NAME})
-    add_executable(${test_NAME} ${test_SRC})
-    target_link_libraries(${test_NAME} tkDNN)
-endforeach()
-
-# MOBILENET
-add_executable(test_mobilenetv2ssd tests/mobilenet/mobilenetv2ssd/mobilenetv2ssd.cpp)
-target_link_libraries(test_mobilenetv2ssd tkDNN)
-
-add_executable(test_bdd-mobilenetv2ssd tests/mobilenet/bdd-mobilenetv2ssd/bdd-mobilenetv2ssd.cpp)
-target_link_libraries(test_bdd-mobilenetv2ssd tkDNN)
-
-add_executable(test_mobilenetv2ssd512 tests/mobilenet/mobilenetv2ssd512/mobilenetv2ssd512.cpp)
-target_link_libraries(test_mobilenetv2ssd512 tkDNN)
-
-# BACKBONES
-add_executable(test_resnet101 tests/backbones/resnet101/resnet101.cpp)
-target_link_libraries(test_resnet101 tkDNN)
-
-add_executable(test_dla34 tests/backbones/dla34/dla34.cpp)
-target_link_libraries(test_dla34 tkDNN)
-
-# CENTERNET
-add_executable(test_resnet101_cnet tests/centernet/resnet101_cnet/resnet101_cnet.cpp)
-target_link_libraries(test_resnet101_cnet tkDNN)
-
-add_executable(test_dla34_cnet tests/centernet/dla34_cnet/dla34_cnet.cpp)
-target_link_libraries(test_dla34_cnet tkDNN)
-
-# DEMOS
-add_executable(test_rtinference tests/test_rtinference/rtinference.cpp)
-target_link_libraries(test_rtinference tkDNN)
-
-add_executable(map_demo demo/demo/map.cpp)
-target_link_libraries(map_demo tkDNN)
+if (VCPKG_TARGET_ARCHITECTURE STREQUAL "arm64")
+    # custom
+    find_package(OpenGL REQUIRED)
+    set(tkdnn_LIBS_ARM64 nvdla_compiler nvmedia OpenGL::EGL)
+else()
+    set(tkdnn_LIBS_ARM64 "")
+endif()
 
-add_executable(demo demo/demo/demo.cpp)
-target_link_libraries(demo tkDNN)
+if(DEBUG)
+    message(STATUS "build test and demo only in RELEASE")
+else()
+    ## SMALL NETS
+    #add_executable(test_simple tests/simple/test_simple.cpp)
+    #target_link_libraries(test_simple tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+    #install(TARGETS test_simple DESTINATION tools/tkdnn)
+    #
+    #add_executable(test_mnist tests/mnist/test_mnist.cpp)
+    #target_link_libraries(test_mnist tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+    #install(TARGETS test_mnist DESTINATION tools/tkdnn)
+    #
+    #add_executable(test_mnistRT tests/mnist/test_mnistRT.cpp)
+    #target_link_libraries(test_mnistRT tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+    #install(TARGETS test_mnistRT DESTINATION tools/tkdnn)
+    #
+    #add_executable(test_imuodom tests/imuodom/imuodom.cpp)
+    #target_link_libraries(test_imuodom tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+    #install(TARGETS test_imuodom DESTINATION tools/tkdnn)
+
+    # DARKNET
+    # VICTECH : only build yolo4 related
+    file(GLOB darknet_SRC "tests/darknet/yolo4*.cpp")
+    foreach(test_SRC ${darknet_SRC})
+        get_filename_component(test_NAME "${test_SRC}" NAME_WE)
+        set(test_NAME test_${test_NAME})
+        add_executable(${test_NAME} ${test_SRC})
+        target_link_libraries(${test_NAME} tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+        install(TARGETS ${test_NAME} DESTINATION tools/tkdnn)
+    endforeach()
+
+    ## MOBILENET
+    #add_executable(test_mobilenetv2ssd tests/mobilenet/mobilenetv2ssd/mobilenetv2ssd.cpp)
+    #target_link_libraries(test_mobilenetv2ssd tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+    #install(TARGETS test_mobilenetv2ssd DESTINATION tools/tkdnn)
+
+    #add_executable(test_bdd-mobilenetv2ssd tests/mobilenet/bdd-mobilenetv2ssd/bdd-mobilenetv2ssd.cpp)
+    #target_link_libraries(test_bdd-mobilenetv2ssd tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+    #install(TARGETS test_bdd-mobilenetv2ssd DESTINATION tools/tkdnn)
+
+    #add_executable(test_mobilenetv2ssd512 tests/mobilenet/mobilenetv2ssd512/mobilenetv2ssd512.cpp)
+    #target_link_libraries(test_mobilenetv2ssd512 tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+    #install(TARGETS test_mobilenetv2ssd512 DESTINATION tools/tkdnn)
+
+    ## BACKBONES
+    #add_executable(test_resnet101 tests/backbones/resnet101/resnet101.cpp)
+    #target_link_libraries(test_resnet101 tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+    #install(TARGETS test_resnet101 DESTINATION tools/tkdnn)
+
+    #add_executable(test_dla34 tests/backbones/dla34/dla34.cpp)
+    #target_link_libraries(test_dla34 tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+    #install(TARGETS test_dla34 DESTINATION tools/tkdnn)
+
+    ## CENTERNET
+    #add_executable(test_resnet101_cnet tests/centernet/resnet101_cnet/resnet101_cnet.cpp)
+    #target_link_libraries(test_resnet101_cnet tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+    #install(TARGETS test_resnet101_cnet DESTINATION tools/tkdnn)
+
+    #add_executable(test_dla34_cnet tests/centernet/dla34_cnet/dla34_cnet.cpp)
+    #target_link_libraries(test_dla34_cnet tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+    #install(TARGETS test_dla34_cnet DESTINATION tools/tkdnn)
+
+    # DEMOS
+    #add_executable(test_rtinference tests/test_rtinference/rtinference.cpp)
+    #target_link_libraries(test_rtinference tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+    #install(TARGETS test_rtinference DESTINATION tools/tkdnn)
+
+    #add_executable(map_demo demo/demo/map.cpp)
+    #target_link_libraries(map_demo tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+    #install(TARGETS map_demo DESTINATION tools/tkdnn)
+
+    add_executable(demo demo/demo/demo.cpp)
+    target_link_libraries(demo tkDNN ${tkdnn_LIBS} ${tkdnn_LIBS_ARM64})
+    install(TARGETS demo DESTINATION tools/tkdnn)
+endif()
 
 #-------------------------------------------------------------------------------
 # Install
